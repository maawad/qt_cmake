cmake_minimum_required(VERSION 3.1.0)

project(qt_cmake LANGUAGES CXX CUDA)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

find_package(CUDAToolkit REQUIRED)
set(cuda_includes     ${CUDAToolkit_INCLUDE_DIRS})
set(includes_directory "${CMAKE_CURRENT_SOURCE_DIR}/include")


# Direct all output to /bin directory
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

if(CMAKE_VERSION VERSION_LESS "3.7.0")
    set(CMAKE_INCLUDE_CURRENT_DIR ON)
endif()

set(CMAKE_PREFIX_PATH "C:/Qt/6.3.0/msvc2019_64")
find_package(Qt6 COMPONENTS Widgets REQUIRED)

add_executable(qt_cmake
    main.cpp
)

target_include_directories(qt_cmake
                      PRIVATE ${cuda_includes}
                      PRIVATE ${includes_directory})

target_link_libraries(qt_cmake Qt6::Widgets  CUDA::cuda_driver CUDA::cudart_static)

file(TO_NATIVE_PATH ${includes_directory} includes_directory_native)

set(CMAKE_VS_SDK_INCLUDE_DIRECTORIES
    $(VC_IncludePath)
    $(WindowsSDK_IncludePath)
    ${includes_directory_native}
    )